name: tester

on: 
  push:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  MY_ENV_VAR: ${{ github.ref }}
  API_URL: ${{ github.api_url }}
  BRANCH_NAME: __${{github.event.repository.name}}_${{github.run_number}}
  DAY_OF_WEEK: Monday
  VTK_VERSION: 6.3.0

jobs:

  # tag:
  #   runs-on: windows-2016

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: force tag
  #       shell: pwsh
  #       run: |
  #         echo build=${{github.run_number}}
  #         echo commitish=${{github.sha}}
  #         git tag -f vtk-6.3.0-vs2017-x64
  #         git push -f origin vtk-6.3.0-vs2017-x64

  # check-tag:
  #   runs-on: windows-2016
  #   needs: [tag]

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: list tags
  #       shell: pwsh
  #       run: |
  #         echo "::group::Notes"
  #         echo "actions/checkout@v2 doesn't pull tags"
  #         echo commitish=${{github.sha}}
  #         git log -n1 --format=format:"%H"
  #         git remote -v
  #         git ls-remote --tags origin
  #         echo "::endgroup::"


  # cache-vtk-debug:

  #   runs-on: windows-2016

  #   steps:

  #     - uses: actions/checkout@v2

  #     - name: Export env
  #       env:
  #         type:     debug
  #         zipfile:  v${{env.VTK_VERSION}}.zip
  #         instdir:  C:/VTK-${{env.VTK_VERSION}}-vs2017-x64
  #         builddir: C:/VTK-${{env.VTK_VERSION}}-vs2017-x64-build
  #         srcdir:   C:/VTK-${{env.VTK_VERSION}}
  #       run: |
  #         echo "type=$env:type"         | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
  #         echo "zipfile=$env:zipfile"   | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
  #         echo "instdir=$env:instdir"   | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
  #         echo "builddir=$env:builddir" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
  #         echo "srcdir=$env:srcdir"     | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

  #     - name: test
  #       run: |
  #         echo "type=$env:type"
  #         echo "zipfile=$env:zipfile"
  #         echo "instdir=$env:instdir"
  #         echo "builddir=$env:builddir"
  #         echo "srcdir=$env:srcdir"


  # greeting_windows_job:
  #   runs-on: windows-2016
  #   env:
  #     Greeting: Hello
  #   steps:
  #     - name: "Say Hello Mona it's Monday"
  #       run: |
  #         echo "$env:Greeting $env:First_Name}}. Today is $env:DAY_OF_WEEK!"
  #         echo "First_Name=$env:First_Name" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
  #       env:
  #         First_Name: ${{ env.DAY_OF_WEEK }}
  #     - name: "Next step"
  #       run: echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!"


  # greeting_job:
  #   runs-on: ubuntu-latest
  #   env:
  #     Greeting: Hello
  #   steps:
  #     - name: "Say Hello Mona it's Monday"
  #       run: echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!"
  #       env:
  #         First_Name: ${{ env.DAY_OF_WEEK }}
  #     - name: "Next step"
  #       run: echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!"

  # windows-2016:
  #   if: ${{ github.repository == 'scharlton2/action_testing' }}
  #   runs-on: windows-2016
  #   steps:
  #     - name: Dump GitHub context
  #       env:
  #         GITHUB_CONTEXT: ${{ toJSON(github) }}
  #         USE_MY_ENV_VAR: ${{ env.MY_ENV_VAR }}
  #       run: echo "$GITHUB_CONTEXT"
  #     - name: Dump job context
  #       env:
  #         JOB_CONTEXT: ${{ toJSON(job) }}
  #       run: echo "$JOB_CONTEXT"
  #     - name: Dump steps context
  #       env:
  #         STEPS_CONTEXT: ${{ toJSON(steps) }}
  #       run: echo "$STEPS_CONTEXT"
  #     - name: Dump runner context
  #       env:
  #         RUNNER_CONTEXT: ${{ toJSON(runner) }}
  #       run: echo "$RUNNER_CONTEXT"
  #     - name: Dump strategy context
  #       env:
  #         STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
  #       run: echo "$STRATEGY_CONTEXT"
  #     - name: Dump matrix context
  #       env:
  #         MATRIX_CONTEXT: ${{ toJSON(matrix) }}
  #       run: echo "$MATRIX_CONTEXT"
  #     - name: Dump tools
  #       run: |
  #         Get-Command cmake
  #         Get-Command python
  #         Get-Command 7z
  #         Get-Command curl
  #     - name: Dump env
  #       shell: cmd
  #       run: |
  #         set
        
  windows-2019:
    if: ${{ github.repository == 'scharlton2/action_testing' }}
    runs-on: windows-2019
    steps:

      - name: Print env
        shell: cmd
        run: |
          set

      - name: Print env
        shell: pwsh
        run: |
          dir env:

      - name: Print env
        shell: bash
        run: |
          printenv


      - name: Testing not main
        if: env.GITHUB_REF_NAME != 'main'
        run: |
          echo "this is NOT the main branch"

      - name: Testing if main
        if: env.GITHUB_REF_NAME == 'main'
        run: |
          echo "this is the main branch"

      - name: Testing if main and true
        if: env.GITHUB_REF_NAME == 'main' && true
        run: |
          echo "this is the main branch AND true"

      - name: Testing if main and false
        if: env.GITHUB_REF_NAME == 'main' && false
        run: |
          echo "this is the main branch AND false"

      - name: Testing if main and true with brackets
        if: ${{ env.GITHUB_REF_NAME == 'main' && true }}
        run: |
          echo "this is the main branch AND true with brackets"

      - name: Testing if main and false with brackets
        if: ${{ env.GITHUB_REF_NAME == 'main' && false }}
        run: |
          echo "this is the main branch AND false with brackets"

      - name: Testing if main and true with parens
        if: (env.GITHUB_REF_NAME == 'main' && true)
        run: |
          echo "this is the main branch AND true with parens"

      - name: Testing if main and false with parens
        if: (env.GITHUB_REF_NAME == 'main' && false)
        run: |
          echo "this is the main branch AND false with parens"

      - name: Testing
        shell: pwsh
        run: |
          echo "env.ref_name=${{env.GITHUB_REF_NAME}}"
          echo "env.ref_type=${{ env.GITHUB_REF_TYPE }}"
          echo "env:GITHUB_REF_NAME=$env:GITHUB_REF_NAME"
          echo "env:GITHUB_REF_TYPE=$env:GITHUB_REF_TYPE"
          echo "github.ref_name=${{ github.ref_name }}"
          echo "github.ref_type=${{ github.ref_type }}"

      - name: Testing if
        if: ${{ env.GITHUB_REF_NAME }} == 'main' }}
        run: |
          echo "this is the main branch"
          echo "env.GITHUB_REF_NAME=${{ env.GITHUB_REF_NAME }}"
          echo "env:GITHUB_REF_NAME=$env:GITHUB_REF_NAME"

      - name: Testing not if
        if: ${{ env.GITHUB_REF_NAME }} != 'main' }}
        run: |
          echo "this is NOT the main branch"
          echo "env.GITHUB_REF_NAME=${{ env.GITHUB_REF_NAME }}"
          echo "env:GITHUB_REF_NAME=$env:GITHUB_REF_NAME"

      - name: Testing if 2
        if: ${{ env.GITHUB_REF_NAME }} == 'main'
        shell: pwsh
        run: |
          echo "this is the main branch"
          echo "env.GITHUB_REF_NAME=${{ env.GITHUB_REF_NAME }}"
          echo "env:GITHUB_REF_NAME=$env:GITHUB_REF_NAME"

      - name: Testing not if 2
        if: ${{ env.GITHUB_REF_NAME }} != 'main'
        shell: pwsh
        run: |
          echo "this is NOT the main branch"
          echo "env.GITHUB_REF_NAME=${{ env.GITHUB_REF_NAME }}"
          echo "env:GITHUB_REF_NAME=$env:GITHUB_REF_NAME"

      - name: Testing if 3
        if: env.GITHUB_REF_NAME == 'main'
        shell: pwsh
        run: |
          echo "this is the main branch"
          echo "env.GITHUB_REF_NAME=${{ env.GITHUB_REF_NAME }}"
          echo "env:GITHUB_REF_NAME=$env:GITHUB_REF_NAME"

      - name: Testing not if 3
        if: env.GITHUB_REF_NAME != 'main'
        shell: pwsh
        run: |
          echo "this is NOT the main branch"
          echo "env.GITHUB_REF_NAME=${{ env.GITHUB_REF_NAME }}"
          echo "env:GITHUB_REF_NAME=$env:GITHUB_REF_NAME"

      - name: Testing if 4
        if: github.ref_name == 'main'
        shell: pwsh
        run: |
          echo "this is the main branch"
          echo "github.ref_name=${{ github.ref_name }}"
          echo "env:GITHUB_REF_NAME=$env:GITHUB_REF_NAME"

      - name: Testing not if 4
        if: github.ref_name != 'main'
        shell: pwsh
        run: |
          echo "this is NOT the main branch"
          echo "github.ref_name=${{ github.ref_name }}"
          echo "env:GITHUB_REF_NAME=$env:GITHUB_REF_NAME"

      - name: Testing if main and branch 5
        if: (github.ref_name == 'main' && github.ref_type == 'branch')
        shell: pwsh
        run: |
          echo "this is the main branch"
          echo "github.ref_name=${{ github.ref_name }}"
          echo "github.ref_type=${{ github.ref_type }}"

      - name: Testing if not(main and branch) 5
        if: (! (github.ref_name == 'main' && github.ref_type == 'branch'))
        shell: pwsh
        run: |
          echo "this is NOT the main branch"
          echo "github.ref_name=${{ github.ref_name }}"
          echo "github.ref_type=${{ github.ref_type }}"

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: Dump tools
        run: |
          Get-Command cmake
          Get-Command python
          Get-Command 7z
          Get-Command curl
      - name: Dump env
        shell: cmd
        run: |
          set
        
  windows-2022:
    if: ${{ github.repository == 'scharlton2/action_testing' }}
    runs-on: windows-2022
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: Dump tools
        run: |
          Get-Command cmake
          Get-Command python
          Get-Command 7z
          Get-Command curl
      - name: Dump env
        shell: cmd
        run: |
          set
